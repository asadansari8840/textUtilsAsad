{"version":3,"sources":["Components/Alert.jsx","Components/Navbar.jsx","Components/TextForm.jsx","App.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","class","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","className","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","document","aria-current","aboutText","toggleMode","htmlFor","textMode","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","myValue","event","target","value","Fragment","style","color","heading","backgroundColor","onChange","rows","upValue","showAlert","lowValue","split","length","border","borderRadius","minHeight","overflow","textOverflow","marginTop","boxShadow","padding","App","setAlert","_useState3","_useState4","setMode","_useState5","_useState6","setTextMode","message","setTimeout","Components_Navbar","body","transition","Components_Alert","Components_TextForm","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"2IAceA,EAZD,SAACC,GAKb,OACCA,EAAMC,OAASC,EAAAC,EAAAC,cAAA,OAAKC,MAAK,eAAAC,OAAiBN,EAAMC,MAAMM,KAA7B,gCAAiEC,KAAK,SAC1FN,EAAAC,EAAAC,cAAA,cANc,SAACK,GAChB,IAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAIzCC,CAAWf,EAAMC,MAAMM,OADtB,KACwCP,EAAMC,MAAMe,MCgEvDC,EAvEA,SAACjB,GAOd,OACEE,EAAAC,EAAAC,cAAA,OACEc,UAAS,kCAAAZ,OAAoCN,EAAMmB,KAA1C,QAAAb,OAAqDN,EAAMmB,OAEpEjB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,mBACbhB,EAAAC,EAAAC,cAAA,KAAGc,UAAU,eAAeE,KAAK,KAC9BpB,EAAMqB,OAETnB,EAAAC,EAAAC,cAAA,UACEc,UAAU,iBACVX,KAAK,SACLe,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXxB,EAAAC,EAAAC,cAAA,QAAMc,UAAU,yBAElBhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,2BAA2BS,GAAG,0BAC3CzB,EAAAC,EAAAC,cAAA,MAAIc,UAAU,mCACZhB,EAAAC,EAAAC,cAAA,MAAIc,UAAU,YACZhB,EAAAC,EAAAC,cAAA,KAAGwB,QAzBQ,WACrBC,SAASR,MAAQ,oBAwBsBH,UAAU,kBAAkBY,eAAa,OAAOV,KAAK,KAAlF,SAIFlB,EAAAC,EAAAC,cAAA,MAAIc,UAAU,YACXhB,EAAAC,EAAAC,cAAA,KAAGwB,QAjCE,WAChBC,SAASR,MAAQ,qBAgCmBH,UAAU,WAAWE,KAAK,KAAKpB,EAAM+B,aAGnE7B,EAAAC,EAAAC,cAAA,OACEC,MAAK,+BAAAC,OACY,UAAfN,EAAMmB,KAAmB,OAAS,UAGpCjB,EAAAC,EAAAC,cAAA,SACEwB,QAAS5B,EAAMgC,WACfd,UAAU,mBACVX,KAAK,WAELoB,GAAG,2BAELzB,EAAAC,EAAAC,cAAA,SACEc,UAAU,mBACVe,QAAQ,2BAETjC,EAAMkC,SAJP,kBCqCGC,EAtFE,SAACnC,GAAU,IAAAoC,EACFC,mBAAS,IADPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBK,EADmBH,EAAA,GACbI,EADaJ,EAAA,GAYpBK,EAAU,SAACC,GACfF,EAAQE,EAAMC,OAAOC,QAOvB,OACE5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4C,SAAA,KACE7C,EAAAC,EAAAC,cAAA,OACE4C,MAAO,CAAEC,MAAsB,SAAfjD,EAAMmB,KAAkB,QAAU,SAClDD,UAAU,kBAEVhB,EAAAC,EAAAC,cAAA,UAAKJ,EAAMkD,SACXhD,EAAAC,EAAAC,cAAA,OAAKc,UAAU,QACbhB,EAAAC,EAAAC,cAAA,YACE4C,MAAO,CACLG,gBAAgC,SAAfnD,EAAMmB,KAAkB,UAAY,QACrD8B,MAAsB,SAAfjD,EAAMmB,KAAkB,QAAU,SAE3C2B,MAAOL,EACPvB,UAAU,eACVS,GAAG,UACHyB,SAAUT,EACVU,KAAK,OAGTnD,EAAAC,EAAAC,cAAA,UAAQwB,QAtCQ,WACpB,IAAM0B,EAAUb,EAAK5B,cACrB6B,EAAQY,EAASX,GACjB3C,EAAMuD,UAAU,4BAA6B,YAmCTrC,UAAU,wBAA1C,kCAGAhB,EAAAC,EAAAC,cAAA,UAAQwB,QApCS,WACrB,IAAM4B,EAAWf,EAAK9B,cACtB+B,EAAQc,EAAUb,GAClB3C,EAAMuD,UAAU,4BAA6B,YAiCRrC,UAAU,0BAA3C,kCAGAhB,EAAAC,EAAAC,cAAA,UAAQwB,QA/BW,WACvBc,EAAQ,IACR1C,EAAMuD,UAAU,8BAA+B,WA6BRrC,UAAU,kBAA7C,eAIFhB,EAAAC,EAAAC,cAAA,OACE4C,MAAO,CAAEC,MAAsB,SAAfjD,EAAMmB,KAAkB,QAAU,SAClDD,UAAU,kBAEVhB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SACGqC,EAAKgB,MAAM,KAAKC,OAAS,EAD5B,cAC0CjB,EAAKiB,OAD/C,eAGAxD,EAAAC,EAAAC,cAAA,SACG,KAAQqC,EAAKgB,MAAM,KAAKC,OAD3B,wDAIAxD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KACE4C,MAAO,CACLC,MAAsB,SAAfjD,EAAMmB,KAAkB,QAAU,QACzCgC,gBAAgC,SAAfnD,EAAMmB,KAAkB,UAAY,QACrDwC,OAAQ,qBACRC,aAAa,OACbC,UAAW,OACXC,SAAU,OACVC,aAAc,eACdC,UAAW,OACXC,UAAW,kBACXC,QAAS,SAGZzB,EAAKiB,OAAS,EACXjB,EACA,4DC1BG0B,MAhDf,WAAe,IAAA/B,EACaC,mBAAS,MADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNnC,EADMqC,EAAA,GACC8B,EADD9B,EAAA,GAAA+B,EAEWhC,mBAAS,SAFpBiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAENlD,EAFMmD,EAAA,GAEAC,EAFAD,EAAA,GAAAE,EAGmBnC,mBAAS,UAH5BoC,EAAAlC,OAAAC,EAAA,EAAAD,CAAAiC,EAAA,GAGNtC,EAHMuC,EAAA,GAGIC,EAHJD,EAAA,GAKPlB,EAAY,SAACoB,EAASpE,GAC1B6D,EAAS,CACPpD,IAAK2D,EACLpE,KAAMA,IAERqE,WAAW,WACTR,EAAS,OACR,OAiBL,OACElE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4C,SAAA,KAEI7C,EAAAC,EAAAC,cAACyE,EAAD,CAAQxD,MAAM,YAAYU,UAAU,kBAAkBZ,KAAMA,EAAMe,SAAUA,EAAUF,WAlBzE,WACJ,UAATb,GACFuD,EAAY,WACZH,EAAQ,QACR1C,SAASiD,KAAK9B,MAAMG,gBAAkB,UACtCtB,SAASiD,KAAK9B,MAAM+B,WAAa,OACjCxB,EAAU,6BAA8B,aAExCmB,EAAY,UACZH,EAAQ,SACR1C,SAASiD,KAAK9B,MAAM+B,WAAa,OACjClD,SAASiD,KAAK9B,MAAMG,gBAAkB,QACtCI,EAAU,8BAA+B,eAOvCrD,EAAAC,EAAAC,cAAC4E,EAAD,CAAO/E,MAAOA,IACdC,EAAAC,EAAAC,cAAA,OAAKc,UAAU,mBASjBhB,EAAAC,EAAAC,cAAC6E,EAAD,CAAW1B,UAAWA,EAAWL,QAAQ,kCAAkC/B,KAAMA,MC9C1E+D,IAASC,WAAWtD,SAASuD,eAAe,SACpDC,OACHnF,EAAAC,EAAAC,cAACF,EAAAC,EAAMmF,WAAP,KACEpF,EAAAC,EAAAC,cAACmF,EAAD","file":"static/js/main.7996d9be.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Alert = (props) => {\r\n    const capitalize =(word)=>{\r\n       const lower = word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nconst Navbar = (props) => {\r\n  const changeTitle=()=>{\r\n    document.title = \"TextUtils - About\"\r\n  };\r\n  const changeTitleHome =()=>{\r\n    document.title = \"TextUtils - Home\"\r\n  }\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a onClick={changeTitleHome} className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n               <a onClick={changeTitle} className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n            </li>\r\n          </ul>\r\n          <div\r\n            class={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              onClick={props.toggleMode}\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              // role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"fle xSwitchCheckDefault\"\r\n            >\r\n            {props.textMode} DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// Navbar.PropTypes = {\r\n//     title : PropTypes.string ,\r\n//     aboutText: PropTypes.string\r\n// }\r\n// Navbar.defaultProps = {\r\n//     title :\"Set title here\",\r\n//     aboutText  : \"Set About us here\"\r\n// }\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nconst TextForm = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpClick = () => {\r\n    const upValue = text.toUpperCase();\r\n    setText(upValue, myValue);\r\n    props.showAlert(\"Converted to UpperCase ! \", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    const lowValue = text.toLowerCase();\r\n    setText(lowValue, myValue);\r\n    props.showAlert(\"Converted to lowerCase ! \", \"success\");\r\n  };\r\n  const myValue = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const clearTextHandler = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text cleared successfully !\", \"danger\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n        className=\"container my-4\"\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#252525\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            value={text}\r\n            className=\"form-control\"\r\n            id=\"forText\"\r\n            onChange={myValue}\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button onClick={handleUpClick} className=\"btn mx-2 btn-primary\">\r\n          Convert your text to UpperCase\r\n        </button>\r\n        <button onClick={handleLowClick} className=\"btn mx-2 btn-secondary\">\r\n          Convert your text to lowerCase\r\n        </button>\r\n        <button onClick={clearTextHandler} className=\"btn btn-danger\">\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n        className=\"container my-3\"\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").length - 1} words and {text.length} characters\r\n        </p>\r\n        <p>\r\n          {0.008 * text.split(\" \").length} minutes is the average time to read\r\n          this paragraph.\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p\r\n          style={{\r\n            color: props.mode === 'dark' ? \"white\" : \"black\",\r\n            backgroundColor: props.mode === 'dark' ? \"#252525\" : \"white\",\r\n            border: \"2px groove #252525\",\r\n            borderRadius:\"20px\",\r\n            minHeight: \"50px\",\r\n            overflow: \"wrap\",\r\n            textOverflow: \"revert-layer\",\r\n            marginTop: \"10px\",\r\n            boxShadow: \"0 0 15px yellow\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n        {text.length > 0\r\n          ? text\r\n          : \"Write something in the textbox to show preview here !\"}\r\n      </p>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextForm;\r\n","import React, { useState } from \"react\";\n// import About from \"./Components/About\"\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const [mode, setMode] = useState(\"light\"); //weather the dark mode is enabled or not\n  const [textMode, setTextMode] = useState(\"Enable\");\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setTextMode(\"Disable\");\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.transition = \"0.5s\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setTextMode(\"Enable\");\n      setMode(\"light\");\n      document.body.style.transition = \"0.5s\";\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} textMode={textMode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />} />\n          </Routes> */}\n        </div>\n        {/* <Routes> */}\n          {/* <Route exact path=\"/\" element={<TextForm  showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode} />} /> */}\n        {/* </Routes> */}\n      {/* </Router> */}\n      <TextForm  showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}